name: CI/CD pipeline for TaskSync backend Azure VM

on:
  push:
    branches: [ master ]

  pull_request:
    types: [closed]
    branches: [ master ] # Merge to master branch


jobs:
  docker: 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2


    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3


    - name: Build and push Docker image
      uses: docker/build-push-action@v6


    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/ts-frontend:latest

  terraform:
    runs-on: ubuntu-latest  
    needs: docker
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Update from v2 to v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.7"  # Update this line from 1.1.7 to 1.5.7

    - name: Terraform Init
      working-directory: ./infra
      run: terraform init -input=false

    - name: Terraform Plan
      working-directory: ./infra
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_frontend_image: ${{ secrets.FRONTEND_IMAGE }}
        TF_VAR_subnet_ids: ${{ secrets.SUBNET_IDS }}
        TF_VAR_frontend_url: ${{ secrets.FRONTEND_URL }}
        TF_VAR_backend_url: ${{ secrets.BACKEND_URL }}
        TF_VAR_backend_file_url: ${{ secrets.BACKEND_FILE_URL }}
      run: terraform plan -out=tfplan

    - name: Terraform Apply
      working-directory: ./infra
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_frontend_image: ${{ secrets.FRONTEND_IMAGE }}
        TF_VAR_frontend_url: ${{ secrets.FRONTEND_URL }}
        TF_VAR_backend_url: ${{ secrets.BACKEND_URL }}
        TF_VAR_backend_file_url: ${{ secrets.BACKEND_FILE_URL }}
      run: terraform destroy -auto-approve